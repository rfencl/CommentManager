@startuml
class ParserTest {
~ void parseJavaDocs()
}
note left of ParserTest::parseJavaDocs()

     * Had to write this test to find the bug with the Middle Javadoc regex.
     * The change I made fixed this test but then was too greedy using the regex.
     * I punted and changed that to a simple string startsWith.
     
end note

class Parser {
+ {static} String START_OF_JAVA_DOC
+ {static} String END_OF_JAVA_DOC
+ {static} Map<Integer,List<String>> parseJavaDocs(List<String>)
+ {static} Map<Integer,String> parseClassAndMethods(List<String>)
}

note left of Parser::parseJavaDocs(List<String>)

     * Copy the javadoc lines.
     * @param lines - The lines of the file to parse.
     * @return - Map of javadocs indexed by the line where they were found.
     
end note
note right of Parser::parseClassAndMethods(List<String>)

     * Copy the class and method declarations
     * @param lines  - lines of the input file
     * @return       - map of declarations indexed by the line number.
     
end note

class CommentManagerTest {
~ {static} Map<Integer,String> classesAndMethods
~ {static} Map<Integer,List<String>> comments
~ {static} Map<String,List<String>> combined
~ {static} List<String> lines
~ {static} Path src
~ {static} Path docs
~ {static} Path linuxSrc
~ {static} Path linuxDocs
~ {static} Path winsrc
~ {static} Path windocs
+ {static} void initBeforeClass()
+ void verifyPathsExist()
+ void verifySrcStructureMatchesDocs()
+ void verifyThatAMarkDownFileExistsForEachJavaFile()
+ void combineCommentsWithDeclaration()
+ void removeCommentsFromFile()
+ void writeTrimmedFileToDisk()
- {static} List<String> readFirstFile()
}


class CommentManager {
+ {static} void main(String[])
+ {static} List<String> removeJavaDocComments(List<String>,Map<Integer,List<String>>)
}
note left of CommentManager::removeJavaDocComments(List<String>,Map<Integer,List<String>>)

     * Remove the java doc comments from the lines of the java source file.
     * @param lines    - lines of java source file
     * @param comments - javadoc comments to remove
     * @return List<String> lines of code without documentation.
     
end note

class StringUtils {
+ {static} String MARKDOWN_INDENT_FOR_CODE_BLOCK
+ {static} String padWithLeadingSpaces(String)
}


class FileUtils {
+ {static} List<Path> getAllSubdirectories(Path)
+ {static} List<Path> getAllJavaFiles(Path)
+ {static} List<Path> getAllMdFiles(Path)
+ {static} List<Path> getFiles(Path,String)
+ {static} List<String> readFile(Path)
+ {static} void writeFile(Path,List<String>)
+ {static} void createDocDirectoryStructure(Path)
- {static} void createFolder(Path)
+ {static} void createMarkDowns(Path)
- {static} void createMdFiles(Path)
+ {static} boolean isWindows()
}

@enduml